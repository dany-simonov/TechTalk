document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userData = {
        streak: localStorage.getItem('streak') || 0,
        crystals: localStorage.getItem('crystals') || 100,
        lastPlayed: localStorage.getItem('lastPlayed') || null,
        theme: localStorage.getItem('theme') || 'light'
    };

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    function updateStats() {
        document.querySelector('.streak-count').textContent = userData.streak;
        document.querySelector('.crystal-count').textContent = userData.crystals;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ streak
    function checkStreak() {
        const today = new Date().toDateString();
        if (userData.lastPlayed) {
            const lastPlayed = new Date(userData.lastPlayed);
            const diffDays = Math.floor((new Date() - lastPlayed) / (1000 * 60 * 60 * 24));
            
            if (diffDays > 1) {
                userData.streak = 0;
            } else if (diffDays === 1) {
                userData.streak++;
            }
        }
        userData.lastPlayed = today;
        localStorage.setItem('lastPlayed', today);
        localStorage.setItem('streak', userData.streak);
    }

    // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞
    const shopItems = [
        {
            id: 'streak_potion',
            name: '–ó–µ–ª—å–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è —Å–µ—Ä–∏–∏',
            price: 50,
            description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Ä–∏—é –ø–æ–±–µ–¥'
        },
        {
            id: 'crystal_boost',
            name: '–£–¥–≤–æ–µ–Ω–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤',
            price: 100,
            description: '–£–¥–≤–∞–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ 24 —á–∞—Å–∞'
        },
        {
            id: 'mega_potion',
            name: '–ë–æ–ª—å—à–æ–µ –∑–µ–ª—å–µ',
            price: 150,
            description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –∑–∞ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π –¥–µ–Ω—å'
        }
    ];

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
    document.querySelector('.shop-link').addEventListener('click', (e) => {
        e.preventDefault();
        openShop();
    });

    function openShop() {
        const modal = document.createElement('div');
        modal.className = 'shop-modal';
        modal.innerHTML = `
            <div class="shop-content">
                <h2>–ú–∞–≥–∞–∑–∏–Ω</h2>
                <div class="shop-items">
                    ${shopItems.map(item => `
                        <div class="shop-item">
                            <h3>${item.name}</h3>
                            <p>${item.description}</p>
                            <div class="price">
                                <span class="crystal">üíé</span>
                                <span>${item.price}</span>
                            </div>
                            <button class="buy-btn" data-id="${item.id}">–ö—É–ø–∏—Ç—å</button>
                        </div>
                    `).join('')}
                </div>
                <button class="close-shop">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        `;

        document.body.appendChild(modal);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –º–∞–≥–∞–∑–∏–Ω–∞
        modal.querySelector('.close-shop').addEventListener('click', () => {
            modal.remove();
        });

        modal.querySelectorAll('.buy-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const itemId = e.target.dataset.id;
                const item = shopItems.find(i => i.id === itemId);
                
                if (userData.crystals >= item.price) {
                    userData.crystals -= item.price;
                    localStorage.setItem('crystals', userData.crystals);
                    updateStats();
                    
                    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
                    applyItemEffect(itemId);
                    
                    alert('–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω–∞!');
                } else {
                    alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤!');
                }
            });
        });
    }

    function applyItemEffect(itemId) {
        switch(itemId) {
            case 'streak_potion':
                userData.streak = Math.max(userData.streak, 1);
                break;
            case 'crystal_boost':
                localStorage.setItem('crystal_boost_until', 
                    new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString());
                break;
            case 'mega_potion':
                userData.lastPlayed = new Date().toDateString();
                break;
        }
        updateStats();
        saveUserData();
    }

    function saveUserData() {
        Object.keys(userData).forEach(key => {
            localStorage.setItem(key, userData[key]);
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    updateStats();
    checkStreak();
});
